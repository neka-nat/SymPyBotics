{"name":"Sympybotics","tagline":"Symbolic Framework for Modeling and Identification of Robot Dynamics","body":"SymPyBotics\r\n===========\r\n\r\nSymbolic Framework for Modeling and Identification of Robot Dynamics\r\n\r\nBuilt on top of [Sympy](http://sympy.org) and [Numpy](http://www.numpy.org/) libraries.\r\n\r\nAlso depends on [SymCode](https://github.com/cdsousa/symcode).\r\n(SymPyBotics [v0.3](https://github.com/cdsousa/sympybotics/tree/v0.3) depends on SymCode [v0.2](https://github.com/cdsousa/symcode/tree/v0.2))\r\n\r\n\r\nExample\r\n-------\r\n\r\nDefinition of a 2 DOF example robot:\r\n\r\n```Python\r\n>>> import sympy\r\n>>> import sympybotics\r\n>>> rbtdef = sympybotics.RobotDef('Example Robot', # robot name\r\n...                               [('-pi/2', 0, 0, 'q+pi/2'),  # list of tuples with Denavit-Hartenberg parameters \r\n...                                ( 'pi/2', 0, 0, 'q-pi/2')], # (alpha, a, d, theta)\r\n...                               dh_convention='standard' # either 'standard' or 'modified'\r\n...                              )\r\n>>> rbtdef.frictionmodel = 'simple' # options are 'simple' and None, defaults to None\r\n\r\n```\r\n\r\n```Python\r\n>>> print(rbtdef.dynparms())\r\n[L_1xx, L_1xy, L_1xz, L_1yy, L_1yz, L_1zz, l_1x, l_1y, l_1z, m_1, fv_1, fc_1, L_2xx, L_2xy, L_2xz, L_2yy, L_2yz, L_2zz, l_2x, l_2y, l_2z, m_2, fv_2, fc_2]\r\n\r\n```\r\n\r\nGeneration of geometric, kinematic and dynamic models:\r\n\r\n```Python\r\n>>> rbt = sympybotics.RobotDynCode(rbtdef, verbose=True)\r\ngenerating geometric model\r\ngenerating kinematic model\r\ngenerating tau code\r\ngenerating gravity term code\r\ngenerating coriolis term code\r\ngenerating inertia matrix code\r\ngenerating regressor matrix code\r\ngenerating friction term code\r\ndone\r\n\r\n```\r\n\r\n```Python\r\n>>> print(rbt.geo.T[-1])\r\n[-sin(q1)*sin(q2), -cos(q1),  sin(q1)*cos(q2), 0]\r\n[ sin(q2)*cos(q1), -sin(q1), -cos(q1)*cos(q2), 0]\r\n[         cos(q2),        0,          sin(q2), 0]\r\n[               0,        0,                0, 1]\r\n\r\n```\r\n\r\n```Python\r\n>>> print(rbt.kin.J[-1])\r\n[0,        0]\r\n[0,        0]\r\n[0,        0]\r\n[0, -cos(q1)]\r\n[0, -sin(q1)]\r\n[1,        0]\r\n\r\n```\r\n\r\nC function generation:\r\n\r\n```Python\r\n>>> tau_str = sympybotics.robotcodegen.dyn_code_to_func('C', rbt.tau_code, 'tau', 2, rbt.dof, rbtdef.dynparms())\r\n\r\n\r\n```\r\nDoing `print(tau_str)`, function code will be output:\r\n\r\n```C\r\nvoid tau( double* tau_out, const double* parms, const double* q, const double* dq, const double* ddq )\r\n{\r\n  double x0 = sin(q[1]);\r\n  double x1 = -dq[0];\r\n  double x2 = -x1;\r\n  double x3 = x0*x2;\r\n  double x4 = cos(q[1]);\r\n  double x5 = x2*x4;\r\n  double x6 = parms[13]*x5 + parms[15]*dq[1] + parms[16]*x3;\r\n  double x7 = parms[14]*x5 + parms[16]*dq[1] + parms[17]*x3;\r\n  double x8 = -ddq[0];\r\n  double x9 = -x4;\r\n  double x10 = dq[1]*x1;\r\n  double x11 = x0*x10 + x8*x9;\r\n  double x12 = -x0*x8 - x10*x4;\r\n  double x13 = 9.81*x0;\r\n  double x14 = 9.81*x4;\r\n  double x15 = parms[12]*x5 + parms[13]*dq[1] + parms[14]*x3;\r\n\r\n  tau_out[0] = -parms[3]*x8 + x0*(parms[14]*x11 + parms[16]*ddq[1] + parms[17]*x12 - dq[1]*x15 - parms[19]*x14 + x5*x6) - x9*(parms[12]*x11 + parms[13]*ddq[1] + parms[14]*x12 + dq[1]*x7 + parms[19]*x13 - x3*x6);\r\n  tau_out[1] = parms[13]*x11 + parms[15]*ddq[1] + parms[16]*x12 - parms[18]*x13 + parms[20]*x14 + x15*x3 - x5*x7;\r\n\r\n  return;\r\n}\r\n```\r\n\r\nDynamic base parameters:\r\n\r\n```Python\r\n>>> rbt.calc_base_parms()\r\n>>> print(rbt.dyn.baseparms)\r\n[L_1yy + L_2zz]\r\n[         fv_1]\r\n[         fc_1]\r\n[L_2xx - L_2zz]\r\n[        L_2xy]\r\n[        L_2xz]\r\n[        L_2yy]\r\n[        L_2yz]\r\n[         l_2x]\r\n[         l_2z]\r\n[         fv_2]\r\n[         fc_2]\r\n\r\n```\r\n\r\nAuthor\r\n------\r\n\r\n[Cristóvão Duarte Sousa](https://github.com/cdsousa)\r\n\r\nInstall\r\n-------\r\n\r\nFrom git source:\r\n\r\n    git clone git@github.com:cdsousa/sympybotics.git\r\n    cd sympybotics\r\n    python setup.py install\r\n\r\nLicense\r\n-------\r\n\r\nNew BSD license. See [License File](LICENSE.txt)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}